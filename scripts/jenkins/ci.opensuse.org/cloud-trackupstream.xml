<?xml version="1.0" encoding="UTF-8"?>
<matrix-project>
  <actions/>
  <description>update OBS packages from git or tarballs via OBS _service feature</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>14</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>1 1 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>project</name>
      <values>
        <string>Cloud:OpenStack:Folsom:Staging</string>
        <string>Cloud:OpenStack:Grizzly:Staging</string>
        <string>Cloud:OpenStack:Master</string>
        <string>systemsmanagement:crowbar:2.0:staging</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>component</name>
      <values>
        <string>crowbar</string>
        <string>crowbar-barclamp-ceph</string>
        <string>crowbar-barclamp-chef</string>
        <string>crowbar-barclamp-crowbar</string>
        <string>crowbar-barclamp-database</string>
        <string>crowbar-barclamp-deployer</string>
        <string>crowbar-barclamp-dns</string>
        <string>crowbar-barclamp-ganglia</string>
        <string>crowbar-barclamp-glance</string>
        <string>crowbar-barclamp-ipmi</string>
        <string>crowbar-barclamp-keystone</string>
        <string>crowbar-barclamp-kong</string>
        <string>crowbar-barclamp-logging</string>
        <string>crowbar-barclamp-nagios</string>
        <string>crowbar-barclamp-network</string>
        <string>crowbar-barclamp-nova</string>
        <string>crowbar-barclamp-nova_dashboard</string>
        <string>crowbar-barclamp-ntp</string>
        <string>crowbar-barclamp-openstack</string>
        <string>crowbar-barclamp-provisioner</string>
        <string>crowbar-barclamp-swift</string>
        <string>crowbar-barclamp-test</string>
        <string>openstack-ceilometer</string>
        <string>openstack-cinder</string>
        <string>openstack-dashboard</string>
        <string>openstack-glance</string>
        <string>openstack-heat</string>
        <string>openstack-keystone</string>
        <string>openstack-melange</string>
        <string>openstack-nova</string>
        <string>openstack-quantum</string>
        <string>openstack-quickstart</string>
        <string>openstack-swift</string>
        <string>python-cinderclient</string>
        <string>python-glanceclient</string>
        <string>python-heatclient</string>
        <string>python-keystoneclient</string>
        <string>python-melangeclient</string>
        <string>python-novaclient</string>
        <string>python-oslo.config</string>
        <string>python-quantumclient</string>
        <string>python-swiftclient</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>cloud-trackupstream</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <combinationFilter>project != "Cloud:OpenStack:Master" &amp;&amp; ( project=="systemsmanagement:crowbar:2.0:staging" &amp;&amp; [ "crowbar", "crowbar-barclamp-ceph", "crowbar-barclamp-chef", "crowbar-barclamp-crowbar", "crowbar-barclamp-database", "crowbar-barclamp-deployer", "crowbar-barclamp-dns", "crowbar-barclamp-ganglia", "crowbar-barclamp-glance", "crowbar-barclamp-ipmi", "crowbar-barclamp-keystone", "crowbar-barclamp-kong", "crowbar-barclamp-logging", "crowbar-barclamp-nagios", "crowbar-barclamp-network", "crowbar-barclamp-nova", "crowbar-barclamp-nova_dashboard", "crowbar-barclamp-ntp", "crowbar-barclamp-openstack", "crowbar-barclamp-provisioner", "crowbar-barclamp-swift", "crowbar-barclamp-test",  ].contains(component) ) || ( project=="Cloud:OpenStack:Folsom:Staging" &amp;&amp; [ "openstack-cinder", "openstack-dashboard", "openstack-glance", "openstack-keystone", "openstack-nova", "openstack-quantum", "openstack-quickstart", "openstack-swift",  ].contains(component) ) || ( project=="Cloud:OpenStack:Master" &amp;&amp; [ "openstack-ceilometer", "openstack-cinder", "openstack-dashboard", "openstack-glance", "openstack-heat", "openstack-keystone", "openstack-nova", "openstack-quantum", "openstack-quickstart", "openstack-swift", "python-cinderclient", "python-glanceclient", "python-heatclient", "python-keystoneclient", "python-novaclient", "python-quantumclient", "python-swiftclient", "python-oslo.config",  ].contains(component) )</combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command>PROJECTSOURCE=OBS/${project}
COMPONENT=$component

# needs .oscrc with user,pass,trusted_prj
# zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools/SLE_11_SP2/openSUSE:Tools.repo
# zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools:/Unstable/SLE_11_SP2/openSUSE:Tools:Unstable.repo
# zypper in osc obs-service-tar_scm obs-service-github_tarballs obs-service-recompress obs-service-git_tarballs obs-service-set_version
[ -z "$PROJECTSOURCE" ] &amp;&amp; ( echo "Error: no PROJECTSOURCE defined." ; exit 1 )

[ -e /root/bin/update_automation ] || wget -O /root/bin/update_automation https://raw.github.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation &amp;&amp; chmod a+x /root/bin/update_automation
# fetch the latest automation updates
update_automation track-upstream-and-package.pl

OBS_TYPE=${PROJECTSOURCE%%/*}
OBS_PROJECT=${PROJECTSOURCE##*/}

case $OBS_TYPE in
  OBS) OSCAPI="https://api.opensuse.org"
       OSC_BUILD_DIST=SLE_11_SP2
       OSC_BUILD_ARCH=x86_64
       ;;
  *)   echo "This jenkins instance only interacts with OBS."
       exit 1
       ;;
esac

# remove accidentally added spaces
COMPONENT=${COMPONENT// /}
OBS_PROJECT=${OBS_PROJECT// /}

if [ -z "$COMPONENT" ] ; then
  echo "Error: Variable COMPONENT is unset."
  exit 1
fi

export OSCAPI
export OSC_BUILD_DIST
export OSC_BUILD_ARCH

export JHOME=/home/jenkins
export OBS_CHECKOUT=$JHOME/OBS_CHECKOUT/$OBS_PROJECT
export OSC_BUILD_ROOT=$JHOME/buildroot

mkdir -p ~/.obs
for i in incoming repo repourl
do
  mkdir -p $JHOME/obscache/tar_scm/$i
done 
echo "CACHEDIRECTORY=\"$JHOME/obscache/tar_scm\"" &gt; ~/.obs/tar_scm

mkdir -p "$OBS_CHECKOUT"
cd "$OBS_CHECKOUT"

rm -rf "$COMPONENT"
osc -A $OSCAPI co -c "$OBS_PROJECT" "$COMPONENT"

[ -d "$COMPONENT" ] || ( echo "Error: Component $COMPONENT does not exist (yet) or has been removed."  ; exit 1 )
cd "$COMPONENT"

set +e
if [ ${OBS_PROJECT} != "Cloud:OpenStack:Master" ] ; then
  # skip test in C:O:M as we do not have linked packages there
  grep -q "&lt;linkinfo" .osc/_files || exit 2
fi

# call script in /root/bin
track-upstream-and-package.pl</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>
