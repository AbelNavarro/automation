<?xml version="1.0" encoding="UTF-8"?>
<matrix-project>
  <actions/>
  <description>run unittests on different workers with different base-OS and different library versions</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>14</daysToKeep>
    <numToKeep>28</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.2">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H */8 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.LabelAxis>
      <name>component</name>
      <values>
        <string>openstack-ceilometer</string>
        <string>openstack-cinder</string>
        <string>openstack-dashboard</string>
        <string>openstack-designate</string>
        <string>openstack-glance</string>
        <string>openstack-heat</string>
        <string>openstack-ironic</string>
        <string>openstack-keystone</string>
        <string>openstack-marconi</string>
        <string>openstack-neutron</string>
        <string>openstack-nova</string>
        <string>openstack-swift</string>
        <string>openstack-trove</string>
        <string>openstack-tuskar</string>
        <string>openstack-tuskar_ui</string>
        <string>python-ceilometerclient</string>
        <string>python-cinderclient</string>
        <string>python-glanceclient</string>
        <string>python-heatclient</string>
        <string>python-keystoneclient</string>
        <string>python-neutronclient</string>
        <string>python-novaclient</string>
        <string>python-swiftclient</string>
      </values>
    </hudson.matrix.LabelAxis>
    <hudson.matrix.TextAxis>
      <name>openstackrelease</name>
      <values>
        <string>master</string>
        <string>icehouse</string>
        <string>havana</string>
        <string>grizzly</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>distribution</name>
      <values>
        <string>SLE-12</string>
        <string>SLE-11-SP3</string>
        <string>openSUSE-13.1</string>
        <string>openSUSE-12.3</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>["grizzly", "havana", "icehouse"].contains(openstackrelease) &amp;&amp;   (    ( openstackrelease=="grizzly" &amp;&amp;  ["openSUSE-12.3", "SLE-11-SP3"].contains(distribution) &amp;&amp;     ! ["openstack-designate", "openstack-marconi", "openstack-ironic", "openstack-trove",        "python-neutronclient", "openstack-neutron", "openstack-tuskar", "openstack-tuskar_ui"].contains(component) )  ||    ( openstackrelease=="havana"   &amp;&amp;  ["openSUSE-13.1", "SLE-11-SP3"].contains(distribution) &amp;&amp;     ! ["openstack-marconi", "python-marconiclient", "openstack-designate", "openstack-ironic", "openstack-trove",        "python-ironicclient", "openstack-tuskar", "openstack-tuskar_ui" ].contains(component)                      )  ||    ( openstackrelease=="icehouse" &amp;&amp;  ["openSUSE-13.1", "SLE-11-SP3"].contains(distribution) )  ||   ( openstackrelease=="master"   &amp;&amp;  ["openSUSE-13.1", "SLE-11-SP3"].contains(distribution) )  )</combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command># fetch the latest automation updates
mkdir -p ~/bin
[ -e ~/bin/update_automation ] || wget -O ~/bin/update_automation https://raw.github.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation &amp;&amp; chmod a+x ~/bin/update_automation
withlock --verbose -w 30 /root/update_automation.lock update_automation openstack-unittest-testconfig.pl chroot-unittest

# package is a reserved name in groovy (see combination filter)
package=$component

case $distribution in
  SLE-11-SP3) OSC_DIST=SLE_11_SP3
   ;;
  openSUSE-13.1) OSC_DIST=openSUSE_13.1
   ;;
  openSUSE-12.3) OSC_DIST=openSUSE_12.3
   ;;
esac

# map label to OBS project
case $openstackrelease in
  master)  dist=Cloud:OpenStack:Master
          ;;
  grizzly) dist=Cloud:OpenStack:Grizzly:Staging
          ;;
  havana) dist=Cloud:OpenStack:Havana:Staging
          ;;
  icehouse) dist=Cloud:OpenStack:Icehouse:Staging
          ;;
  *) echo "Unsupported OpenStack release. Add it to the job config."
          exit 1
          ;;
esac

chname="$openstackrelease-$distribution"
ch="/chroot/$chname"
# TODO: create chroot if needed
mkchroot enable "$chname"
rsync -LvrptgoD /root/bin/openstack-unittest-testconfig.pl /root/bin/chroot-unittest $ch/root/bin/
rsync -LvrptgoD /root/.oscrc $ch/root/

##
export package
export distribution
export openstackrelease
export OSC_DIST
export dist
##


withlock --verbose -w 2000 $ch.lock chroot $ch "/bin/bash -x /root/bin/chroot-unittest"
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.5.9"/>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>
