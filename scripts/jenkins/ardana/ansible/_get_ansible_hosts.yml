---

- name: Get the ansible hostname for deployer
  shell: |
    ansible '!localhost' -m shell -a "ip addr |grep -q {{ deployer_mgmt_ip }}" | grep success | cut -d' ' -f1
  args:
    chdir: /var/lib/ardana/scratch/ansible/next/ardana/ansible
  become: true
  become_user: ardana
  register: _ansible_hostname_result
  failed_when: _ansible_hostname_result.rc != 0 or
             _ansible_hostname_result.stdout | trim == ''

- name: Set ansible deployer hostname fact
  set_fact:
    ardana_ansible_deployer: "{{ _ansible_hostname_result.stdout }}"

- name: Get the ansible hostnames for controller nodes
  shell: |
    ansible '!localhost' -m shell -a "ip addr |grep -q {{ item }}" | grep success | cut -d' ' -f1
  args:
    chdir: /var/lib/ardana/scratch/ansible/next/ardana/ansible
  become: true
  become_user: ardana
  register: _ansible_hostname_result
  failed_when: _ansible_hostname_result.rc != 0 or
             _ansible_hostname_result.stdout | trim == ''
  with_items: "{{ controller_mgmt_ips|default([]) }}"

- name: Set ansible controller hostnames fact
  set_fact:
    ardana_ansible_controllers:
      "{{ _ansible_hostname_result.results|map(attribute='stdout')|list }}"

- name: Get the ansible hostnames for all nodes
  shell: |
    ansible '!localhost' -a "/bin/true" | grep success | cut -d' ' -f1
  args:
    chdir: /var/lib/ardana/scratch/ansible/next/ardana/ansible
  become: true
  become_user: ardana
  register: _ansible_hostname_result
  failed_when: _ansible_hostname_result.rc != 0 or
             _ansible_hostname_result.stdout | trim == ''

- name: Set ansible all hostnames fact
  set_fact:
    ardana_ansible_nodes: "{{ _ansible_hostname_result.stdout_lines }}"


