<?xml version="1.0" encoding="UTF-8"?>
<matrix-project>
  <actions/>
  <description>update OBS/IBS packages from git or tarballs via OBS _service feature</description>
  <logRotator>
    <daysToKeep>30</daysToKeep>
    <numToKeep>30</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>H 3 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>component</name>
      <values>
        <string>crowbar</string>
        <string>crowbar-barclamp-bios</string>
        <string>crowbar-barclamp-ceilometer</string>
        <string>crowbar-barclamp-ceph</string>
        <string>crowbar-barclamp-cinder</string>
        <string>crowbar-barclamp-cisco-ucs</string>
        <string>crowbar-barclamp-crowbar</string>
        <string>crowbar-barclamp-database</string>
        <string>crowbar-barclamp-deployer</string>
        <string>crowbar-barclamp-dns</string>
        <string>crowbar-barclamp-ganglia</string>
        <string>crowbar-barclamp-glance</string>
        <string>crowbar-barclamp-heat</string>
        <string>crowbar-barclamp-hyperv</string>
        <string>crowbar-barclamp-ipmi</string>
        <string>crowbar-barclamp-keystone</string>
        <string>crowbar-barclamp-logging</string>
        <string>crowbar-barclamp-nagios</string>
        <string>crowbar-barclamp-network</string>
        <string>crowbar-barclamp-nfs_client</string>
        <string>crowbar-barclamp-nova</string>
        <string>crowbar-barclamp-nova_dashboard</string>
        <string>crowbar-barclamp-ntp</string>
        <string>crowbar-barclamp-openstack</string>
        <string>crowbar-barclamp-pacemaker</string>
        <string>crowbar-barclamp-provisioner</string>
        <string>crowbar-barclamp-quantum</string>
        <string>crowbar-barclamp-neutron</string>
        <string>crowbar-barclamp-rabbitmq</string>
        <string>crowbar-barclamp-raid</string>
        <string>crowbar-barclamp-suse-manager-client</string>
        <string>crowbar-barclamp-swift</string>
        <string>crowbar-barclamp-tempest</string>
        <string>crowbar-barclamp-trove</string>
        <string>crowbar-barclamp-updater</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>openstack-trackupstream</string>
      </values>
    </hudson.matrix.LabelAxis>
    <hudson.matrix.TextAxis>
      <name>project</name>
      <values>
        <string>Devel:Cloud:2.0:Staging</string>
        <string>Devel:Cloud:3:Staging</string>
        <string>Devel:Cloud:4:Staging</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>! (
      ["Devel:Cloud:2.0:Staging"].contains(project)
          &amp;&amp;  ["crowbar-barclamp-bios", "crowbar-barclamp-neutron", "crowbar-barclamp-pacemaker", "crowbar-barclamp-raid", "crowbar-barclamp-tempest", "crowbar-barclamp-trove"].contains(component)
      ||  ["Devel:Cloud:3:Staging", "crowbar-barclamp-tempest", "crowbar-barclamp-trove"].contains(project)
          &amp;&amp;  ["crowbar-barclamp-quantum"].contains(component)
      ||  ["Devel:Cloud:4:Staging"].contains(project)
          &amp;&amp;  ["crowbar-barclamp-bios", "crowbar-barclamp-raid", "crowbar-barclamp-trove", "crowbar-barclamp-tempest", "crowbar-barclamp-quantum"].contains(component)  )
    </combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command>PROJECTSOURCE=IBS/${project}
COMPONENT=$component

# needs .oscrc with user,pass,trusted_prj
# zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools/SLE_11_SP2/openSUSE:Tools.repo
# zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools:/Unstable/SLE_11_SP2/openSUSE:Tools:Unstable.repo
# zypper in osc obs-service-tar_scm obs-service-github_tarballs obs-service-recompress obs-service-git_tarballs obs-service-set_version obs-service-refresh_patches
[ -z "$PROJECTSOURCE" ] &amp;&amp; ( echo "Error: no PROJECTSOURCE defined." ; exit 1 )

mkdir -p ~/bin
[ -e ~/bin/update_automation ] || wget -O ~/bin/update_automation https://raw.github.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation &amp;&amp; chmod a+x ~/bin/update_automation
# fetch the latest automation updates
update_automation track-upstream-and-package.pl

OBS_TYPE=${PROJECTSOURCE%%/*}
OBS_PROJECT=${PROJECTSOURCE##*/}

# default is SLE_11_SP3
BUILD_DIST=SLE_11_SP3

case $OBS_TYPE in
  OBS) OSCAPI="https://api.opensuse.org"
       OSC_BUILD_DIST=$BUILD_DIST
       OSC_BUILD_ARCH=x86_64
       ;;
  IBS) OSCAPI="https://api.suse.de"
       OSC_BUILD_DIST=$BUILD_DIST
       OSC_BUILD_ARCH=x86_64
       ;;
  *)   echo "This jenkins instance only interacts with OBS or IBS."
       exit 1
       ;;
esac

# remove accidentally added spaces
COMPONENT=${COMPONENT// /}
OBS_PROJECT=${OBS_PROJECT// /}

if [ -z "$COMPONENT" ] ; then
  echo "Error: Variable COMPONENT is unset."
  exit 1
fi

export OSCAPI
export OSC_BUILD_DIST
export OSC_BUILD_ARCH

export JHOME=/home/jenkins
export BS_CHECKOUT=$JHOME/${OBS_TYPE}_CHECKOUT/$OBS_PROJECT
export OSC_BUILD_ROOT=$JHOME/buildroot

mkdir -p ~/.obs
for i in incoming repo repourl
do
  mkdir -p $JHOME/obscache/tar_scm/$i
done
echo "CACHEDIRECTORY=\"$JHOME/obscache/tar_scm\"" &gt; ~/.obs/tar_scm

mkdir -p "$BS_CHECKOUT"
cd "$BS_CHECKOUT"

rm -rf "$COMPONENT"
osc -A $OSCAPI co -c "$OBS_PROJECT" "$COMPONENT"

[ -d "$COMPONENT" ] || ( echo "Error: Component $COMPONENT does not exist (yet) or has been removed."  ; exit 1 )
cd "$COMPONENT"

set +e
if [ ${OBS_PROJECT} != "Cloud:OpenStack:Master" ] ; then
  # skip test in C:O:M as we do not have linked packages there
  grep -q "&lt;linkinfo" .osc/_files || exit 2
fi

# call script in /root/bin
track-upstream-and-package.pl</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
      <template>#${BUILD_NUMBER}: ${ENV,var="project"}</template>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>
