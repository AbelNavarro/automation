- job:
    name: cloud-mkphyscloud-qa-rally-test
    node: cloud-mkphyscloud-gate-qa
    description: |
      Deploy vm on qa hw.
      Setup rally envirment.
      Run test
      Mandatory parameter: hw_number

    logrotate:
      numToKeep: 7
      daysToKeep: -1

    wrappers:
      - build-name:
          name: '#${BUILD_NUMBER} - ${scenario_name} - qa$hw_number - openstack-rally'
      - timestamps
    publishers:
      - mkphyscloud-qa-common-publishers

    concurrent: true

    parameters:
      - string:
          name: hw_number
          default: "2"
          description: Mandatory, number of the QA cloud server

      - string:
          name: image_name
          default: jeos-rally
          description: |
            Pre condition to have jeos image uploaded before running rally tests

      - string:
          name: scenario_name
          description: Optional; scenario name which typically is an integer with a single letter

      - string:
          name: scenario_job_name
          description: Optional; name of the scenario jenkins job that is used to trigger this job

      - string:
          name: scenario_build_number
          description: Optional; scenario build number that triggered this job

      - string:
          name: rally_server
          default: backup.cloudadm.qa.suse.de
          description: Server hostname where rally is setup

    builders:
      - shell: |
          #!/bin/bash
          set -x
          # Create artifacts dir
          export artifacts_dir=$WORKSPACE/.artifacts
          rm -rf $artifacts_dir
          mkdir -p $artifacts_dir
          touch $artifacts_dir/.ignore

          admin=crowbar$hw_number
          cloud=qa$hw_number

          export rally_server=$rally_server
          export image_name=$image_name

          scp root@$admin:/root/scripts/jenkins-support.sh .
          source jenkins-support.sh
          connect_rally_server_run_test
          ret=$?
          # Archive artifacts on rally server
          buildnumber=${BUILD_NUMBER}
          ssh -T root@$rally_server "bash -s $buildnumber" <<'EOF'
          buildnumber=$1
          mkdir -p /root/rally-results-backup/$buildnumber
          cp /root/results/* /root/rally-results-backup/$buildnumber/
          EOF
          # Copy test run results output to jenkins artifacts
          scp root@$rally_server:/root/results/* $artifacts_dir
          exit $ret
