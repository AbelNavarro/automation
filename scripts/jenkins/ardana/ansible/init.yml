---
- name: Initialize the Deployer
  hosts: hosts
  gather_facts: False

  vars_files:
    - ardana_net_vars.yml

  environment:
    ARDANA_INIT_AUTO: 1
    ARDANA_DEPLOYER_MEDIA_LEGACY_LAYOUT: False

  tasks:
  - name: Download ardana-init.bash
    get_url:
      url: https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/jenkins/ardana/ardana-init.bash
      dest: /var/lib/ardana/ardana-init.bash
      mode: 0775
      owner: ardana
    become: true
    become_user: ardana

  - name: Call ardana-init.bash
    shell: /var/lib/ardana/ardana-init.bash
    become: true
    become_user: ardana

  - name: Create ssh key for ardana user on deployer
    shell: |
      [ -f ~/.ssh/id_rsa ] && ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ""

  - name: Create ardana user on compute nodes
    shell: |
      sshpass -p linux ssh -o ConnectionAttempts=120 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@{{ item }} "getent passwd ardana || useradd -m -d /var/lib/ardana -r -s /bin/bash ardana"
      sshpass -p linux ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  root@{{ item }} mkdir -p /var/lib/ardana/.ssh/
      sshpass -p linux scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  ~ardana/.ssh/id_rsa.pub root@{{ item }}:/var/lib/ardana/.ssh/authorized_keys
      sshpass -p linux ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  root@{{ item }} chown -R ardana: /var/lib/ardana/.ssh/
      sshpass -p linux scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  /etc/sudoers.d/ardana root@{{ item }}:/etc/sudoers.d/ardana
    with_items:
      - "{{ compute1_ardana_ip }}"
      - "{{ compute2_ardana_ip }}"

  - name: Initialize target Model from deployerincloud-lite
    synchronize:
      src: /var/lib/ardana/openstack/ardana-ci/deployerincloud-lite/
      dest: /var/lib/ardana/openstack/my_cloud/definition/
    delegate_to: "{{ inventory_hostname }}"
    become: true
    become_user: ardana

  # FIXME this is ugly we need to find a better way to edit the model
  - name: Update IP Addresses in Model
    shell: |
      sed -i "s/ 192\.168\.110\.3/ x{{ deployer_ardana_ip }}/; \
              s/ 192\.168\.110\.4/ x{{ compute1_ardana_ip }}/; \
              s/ 192\.168\.110\.5/ x{{ compute2_ardana_ip }}/; \
              s/x192/ 192/;" \
              /var/lib/ardana/openstack/my_cloud/definition/data/servers.yml

  # FIXME: Do we really need this?
  - name: Remove server-interface line from baremetal in mode
    shell: |
      sed -i "/server-interface:/d"  /var/lib/ardana/openstack/my_cloud/definition/data/servers.yml

  - name: Add my_cloud config to git
    shell: |
      git add -A
      git commit -q -m "Add custom config to git" || true
    args:
      chdir: /var/lib/ardana//openstack/ardana/ansible
    become: true
    become_user: ardana

  - name: Run config-processor-run.yml playbook
    shell: |
      ansible-playbook -vvv -i hosts/localhost -e encrypt="" -e rekey="" config-processor-run.yml
  #    no_log: True
    register: out
    args:
      chdir: /var/lib/ardana/openstack/ardana/ansible
    become: true
    become_user: ardana

  #- name: Output of config-processor-run.yml playbook
  #  debug: var

  - name: Run ready-deployment.yml playbook
    shell: |
      ansible-playbook -vvv -i hosts/localhost ready-deployment.yml
    args:
      chdir: /var/lib/ardana/openstack/ardana/ansible
    become: true
    become_user: ardana

  - name: Enable skip_disk_config on controller
    shell: |
      touch /etc/openstack/skip_disk_config

  - name: Enable skip_disk_config on computes
    # Using ardana + sudo here to avoid issues with remote root access after running site.yml
    # for the first time
    shell: |
      ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  {{ item }} sudo mkdir /etc/openstack/
      ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  {{ item }} sudo touch /etc/openstack/skip_disk_config
    with_items:
      - "{{ compute1_ardana_ip }}"
      - "{{ compute2_ardana_ip }}"
    become: true
    become_user: ardana

  - name: Run the actual deployment site.yml playbook
    shell: |
      ansible-playbook -vvv -i hosts/verb_hosts site.yml
    args:
      chdir: /var/lib/ardana//scratch/ansible/next/ardana/ansible
    become: true
    become_user: ardana
