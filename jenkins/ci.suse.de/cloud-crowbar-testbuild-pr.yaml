- job:
    name: cloud-crowbar-testbuild-pr
    node: cloud-testbuild-pr 
    concurrent: true
    description: |
      <!-- Managed by Jenkins Job Builder -->

    logrotate:
        numToKeep:  300
        daysToKeep: 300

    properties:
      - authorization:
          cloud:
               - job-build
               - job-cancel
               - job-configure
               - job-delete
               - job-discover
               - job-read
               - job-workspace
               - run-delete
               - run-update
               - scm-tag
          anonymous:
               - job-read

    parameters:
     - string:
        name: crowbar_repo
        default:
        description: The repo to build the rpm from

     - string:
        name: crowbar_github_pr
        default:
        description: The pull request to integrate into the package

     - string:
        name: job_name
        default: "-no-name-"
        description: This name will become the build name of the job. It will appear in the list of builds (webUI, RSS feed).

    wrappers:
    - timestamps:
    - build-name:
         name: '#${BUILD_NUMBER}: ${ENV,var="job_name"}'
    - timeout:
        timeout: 60
        type: no-activity
        abort: true
        write-description: "Job aborted due to 60 minutes of inactivity."

    builders:
    - shell: |
        #####
        # THIS JOB JUST BUILD ONE CROWBAR PR AND HANDS IT OVER TO MKCLOUD (IMPLICITLY VIA THE crowbar-testbuild.py)
        # you can call it with a crowbar repo and a PR "<pr_id>:<sha1>:<branch_name>" as parameter and for this single
        # pr the crowbar-testbuild.py will be run no matter what its github status is
        #
        # The corresponding trigger job will (by default) only trigger builds for "unseen" PRs
        #  (unseen PR = no status reported from github-status on last commit of this PR)
        
        set -x
        
        export automationrepo=~/github.com/SUSE-Cloud/automation
        # automation bootstrapping
        if ! [ -e ${automationrepo}/scripts/jenkins/update_automation ] ; then
          rm -rf ${automationrepo}
          curl https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation | bash
        fi
        # fetch the latest automation updates
        ${automationrepo}/scripts/jenkins/update_automation
        
        ghs=${automationrepo}/scripts/github-status/github-status.rb
        
        github_opts=(${crowbar_github_pr//:/ })
        github_pr_id=${github_opts[0]}
        github_pr_sha=${github_opts[1]}
        github_pr_branch=${github_opts[2]}
        
        function crowbargating_trap()
        {
            $ghs -a set-status -s "failure" -r crowbar/$crowbar_repo -t $BUILD_URL -c $github_pr_sha --context "suse/mkcloud/testbuild" -m "testbuild job failed"
        }
        
        # this job is part of the "pending" state (as it is a prerequisite of the openstack-mkcloud job)
        # so we report pending now
        $ghs -a set-status -s "pending" -r crowbar/$crowbar_repo -t $BUILD_URL -c $github_pr_sha --context "suse/mkcloud/testbuild" -m "Started testbuild job"
        
        
        # the status of the build is set via crowbar-testbuild.py (hopefully)
        # as lots of failures happened lately, a trap was added to catch exceptions (all that we saw were worth an error report to the PR)
        trap "crowbargating_trap" ERR
        
        ${automationrepo}/scripts/crowbar-testbuild.py $crowbar_repo $crowbar_github_pr
        
        $ghs -a set-status -s "success" -r crowbar/$crowbar_repo -t $BUILD_URL -c $github_pr_sha --context "suse/mkcloud/testbuild" -m "testbuild job succeeded"
        $ghs -a set-status -s "pending" -r crowbar/$crowbar_repo -t $BUILD_URL -c $github_pr_sha --context "suse/mkcloud" -m "Queued testbuild PR gating"
        
        trap "-" ERR

    triggers: []
