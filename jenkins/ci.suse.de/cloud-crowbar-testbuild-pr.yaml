- job:
    name: cloud-crowbar-testbuild-pr
    node: cloud-testbuild-pr
    concurrent: true
    description: |
      <!-- Managed by Jenkins Job Builder -->

    logrotate:
        numToKeep:  300
        daysToKeep: 300

    properties:
      - authorization:
          cloud:
               - job-build
               - job-cancel
               - job-configure
               - job-delete
               - job-discover
               - job-read
               - job-workspace
               - run-delete
               - run-update
               - scm-tag
          anonymous:
               - job-read

    parameters:
     - string:
        name: crowbar_repo
        default:
        description: The repo to build the rpm from

     - string:
        name: crowbar_org
        default: crowbar
        description: The github organization to use

     - string:
        name: crowbar_github_pr
        default:
        description: The pull request to integrate into the package

     - string:
        name: job_name
        default: "-no-name-"
        description: This name will become the build name of the job. It will appear in the list of builds (webUI, RSS feed).

    wrappers:
    - timestamps:
    - build-name:
         name: '#${BUILD_NUMBER}: ${ENV,var="job_name"}'
    - timeout:
        timeout: 60
        type: no-activity
        abort: true
        write-description: "Job aborted due to 60 minutes of inactivity."

    builders:
    - shell: |
        #####
        # THIS JOB JUST BUILD ONE CROWBAR PR AND HANDS IT OVER TO MKCLOUD (IMPLICITLY VIA THE crowbar-testbuild.rb)
        # The corresponding trigger job will (by default) only trigger builds for "unseen" PRs
        #  (unseen PR = no status reported from github-status on last commit of this PR)
        echo "Example how to call this job locally:"
        echo "   crowbar-testbuild.rb --org $crowbar_org --repo $crowbar_repo --pr $crowbar_github_pr"
        echo "This requires a valid config yaml however. See the automation repo for an example."

        set -x

        export automationrepo=~/github.com/SUSE-Cloud/automation
        # automation bootstrapping
        if ! [ -e ${automationrepo}/scripts/jenkins/update_automation ] ; then
          rm -rf ${automationrepo}
          curl https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation | bash
        fi
        # fetch the latest automation updates
        ${automationrepo}/scripts/jenkins/update_automation

        ghs=${automationrepo}/scripts/github-status/github-status.rb

        github_opts=(${crowbar_github_pr//:/ })
        github_pr_id=${github_opts[0]}
        github_pr_sha=${github_opts[1]}
        github_pr_branch=${github_opts[2]}

        function crowbargating_trap()
        {
            $ghs -a set-status -s "failure" -r $crowbar_org/$crowbar_repo -t $BUILD_URL -c $github_pr_sha --context "suse/mkcloud/testbuild" -m "testbuild job failed"
        }

        # using a trap to catch all errors of the following commands
        trap "crowbargating_trap" ERR

        # report that the job has started (status "pending")
        $ghs -a set-status -s "pending" -r $crowbar_org/$crowbar_repo -t $BUILD_URL -c $github_pr_sha --context "suse/mkcloud/testbuild" -m "Started testbuild job"

        # do the build
        ${automationrepo}/scripts/crowbar-testbuild.rb --org $crowbar_org --repo $crowbar_repo --pr $crowbar_github_pr --trigger-gating

        # update the status
        $ghs -a set-status -s "pending" -r $crowbar_org/$crowbar_repo -t $BUILD_URL -c $github_pr_sha --context "suse/mkcloud" -m "Queued testbuild PR gating"
        $ghs -a set-status -s "success" -r $crowbar_org/$crowbar_repo -t $BUILD_URL -c $github_pr_sha --context "suse/mkcloud/testbuild" -m "testbuild job succeeded"

        trap "-" ERR
