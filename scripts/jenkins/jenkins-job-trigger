#!/usr/bin/perl -w
#
# Trigger jenkins jobs via http api
#
# 2013, J. Daniel Schmidt <jdsn@suse.de>

sub usage()
{
  return "Usage: $0 <jobname> [<switch> [<key=value> ...] ]
  Examples:
    normal job:    $0 myjobname
    parameterized: $0 myjobname -p var1=foo var2=bar var3=baz
    matrix:        $0 myjobname -m var1=foo var2=bar var3=baz

  Example config file:
cat > jenkinsapi.cred <<EOCONF
\$USER='myusername';
\$APIKEY='987zyx654wvu';
\$SCHEME='https';
\$JURL='ci.opensuse.org';
\$CRUMB='.crumb:123abc456def';
EOCONF

Create the Crumb string:
 curl --user <myusername>:<mypassword> 'https://ci.opensuse.org/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)'
";
}


use strict;

my $USER;
my $PASSWORD; # obsolete but we keep the variable
my $APIKEY;
my $SCHEME="https";
my $JURL="ci.opensuse.org";
my $CRUMB;
my $METHOD='POST';

# read the api credentials from files
eval `cat /etc/jenkinsapi.cred ./jenkinsapi.cred 2>/dev/null`;

if ( ! $APIKEY ) {
  print STDERR "You have not defined your APIKEY variable in the config.\n";
  print STDERR "Login in jenkins and find your api key.";
  print STDERR "Please add this api key to your jenkinsapi.cred file:\n";
  print STDERR ' $APIKEY="987zyx654wvu"';
}

if ( ! $CRUMB ) {
  print STDERR "You have not defined your CRUMB variable in the config.\n";
  print STDERR "Please create your own crumb:\n";
  print STDERR " curl --user <myusername>:<mypassword> 'https://ci.opensuse.org/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)'";
  print STDERR "And then add it to your jenkinsapi.cred file:\n";
  print STDERR ' $CRUMB=".crumb:123abc456def"';
}

$METHOD ||= 'POST';
$SCHEME ||= 'https';
if ($JURL =~ /river\.suse\.de/)
{
  $SCHEME='http';
}

my $up='';
$up="${USER}:${APIKEY}\@" if (defined $USER && $USER ne '' && defined $APIKEY && $APIKEY ne '');
my $jurl="$SCHEME://${up}${JURL}";
my $job=shift || die usage();

my $jobtype='normal';
my $jtype=shift || '';
if ($jtype =~ /^-p$/) {
  $jobtype='parameter';
} elsif ($jtype =~ /^-m$/) {
  $jobtype='matrix';
}

my $triggerurl=$jurl."/job/".$job;

if ($jobtype eq 'normal') {
  $triggerurl .= "/build";
} elsif ($jobtype eq 'parameter') {
  $triggerurl .= "/buildWithParameters?".join('&', @ARGV);
} elsif ($jobtype eq 'matrix') {
  $triggerurl .= "/".join(',', @ARGV)."/build";
}

$triggerurl =~ s/ /+/g;
my @curlargs=();
push @curlargs, ("-X", $METHOD);
push @curlargs, ("-H", $CRUMB) if ($CRUMB);
my @cmd=("curl", @curlargs, $triggerurl);

print join(' ', @cmd) if ( $ENV{debug} );
my $ret=system(@cmd);
exit $ret >> 8;
