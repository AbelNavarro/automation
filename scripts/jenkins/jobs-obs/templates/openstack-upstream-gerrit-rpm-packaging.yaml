- job-template:
    name: 'openstack-upstream-gerrit-rpm-packaging-{release}'
    description: "<b>This job is managed by JJB! Changes must be done in <a href='https://github.com/SUSE-Cloud/automation/tree/master/scripts/jenkins/jobs-obs/templates/'>git</a></b>"
    node: openstack-rpm-packaging
    concurrent: true
    logrotate:
      numToKeep: -1
      daysToKeep: 31
    builders:
      - gerrit-git-prep
      - shell: |
          #!/bin/bash -e
          rpm -qa|grep '\(renderspec\|pymod2pkg\)'

          set -x

          osc_timed="timeout 20m osc"

          # set vars
          OBS_BASE_SRC_PROJECT="Cloud:OpenStack:Upstream:{release}"
          OBS_BASE_TARGET_PROJECT="home:suse-cloud-ci:rpm-packaging-openstack-{release}"
          OBS_TEST_PROJECT="${{OBS_BASE_TARGET_PROJECT}}-${{ZUUL_COMMIT}}"
          TEMP_DIR="/tmp/rpm-packaging-${{ZUUL_COMMIT}}"

          # cleanup
          rm -rf ${{OBS_TEST_PROJECT}}
          rm -rf ${{TEMP_DIR}}
          $osc_timed rdelete -r -m "rpm-packaging CI cleanup" ${{OBS_TEST_PROJECT}} || :
          sleep 3

          # recreate the rpm-packaging tarball (as done by the tar_scm source service)
          mkdir ${{TEMP_DIR}}
          tar --exclude-vcs -cvjf ${{TEMP_DIR}}/rpm-packaging-0.0.1.tar.bz2 --transform 's,^,rpm-packaging-0.0.1/,' .

          # branch and checkout OBS project
          $osc_timed branch --add-repositories-block=local \
              --add-repositories-rebuild=local \
              ${{OBS_BASE_SRC_PROJECT}} \
              "rpm-packaging-openstack" ${{OBS_TEST_PROJECT}} || :
          sleep 2

          # checkout branched project, add updated stuff and commit
          $osc_timed co ${{OBS_TEST_PROJECT}}
          cp ${{TEMP_DIR}}/rpm-packaging-0.0.1.tar.bz2 ${{OBS_TEST_PROJECT}}/rpm-packaging-openstack
          pushd ${{OBS_TEST_PROJECT}}/rpm-packaging-openstack
          $osc_timed detachbranch
          $osc_timed up
          bash -x pre_checkin.sh
          # download source files (needed for i.e. version updates or newly added .spec files)
          $osc_timed service localrun download_files
          $osc_timed addremove
          $osc_timed status
          $osc_timed commit -m "rpm-packaging CI (${{ZUUL_CHANGES}})"

          # also create links for new packages
          echo "creating missing links ..."
          for x in *-SLE_12_SP1.spec; do
              pkgname=${{x//-SLE_12_SP1.spec/}}
              if ! osc ls ${{OBS_TEST_PROJECT}}  $pkgname &>/dev/null; then
                  osc linkpac ${{OBS_TEST_PROJECT}} rpm-packaging-openstack ${{OBS_TEST_PROJECT}} $pkgname
              fi
          done

          popd
          pushd ${{OBS_TEST_PROJECT}}
          echo "#################################"
          echo "https://build.opensuse.org/project/show/${{OBS_TEST_PROJECT}}"
          echo "#################################"
          sleep 5

          # wait for build results (osc wait is buggy - https://github.com/openSUSE/osc/issues/180 )
          timeout 6h bash -c -- '
              while true; do
                  unset pending
                  unset failed
                  unset kickscheduler
                  res=`osc results --csv -w -r SLE_12_SP1`
                  if [ $? -ne 0 ]; then
                      sleep 5
                      continue
                  fi
                  echo "... $(date): "
                  for r in $res; do
                      # some failures?
                      if [[ $r =~ (failed$|unresolvable$|broken$) ]]; then
                          failed=1
                      fi
                      # still pending builds?
                      if [[ $r =~ (blocked$|scheduled$|dispatching$|building$|signing$) ]]; then
                          pending=1
                      fi
                      # scheduler stuck?
                      if [[ $r =~ (finished$|unknown$|outdated$) ]]; then
                          kickscheduler=1
                      fi
                  done

                  if [ -n "$kickscheduler" ]; then
                      echo "# $(date)" | osc meta prjconf -F - ${{OBS_TEST_PROJECT}}
                      sleep $((RANDOM%60+30))
                      echo "kicking scheduler"
                      continue
                  fi

                  if [ -n "$pending" ]; then
                      sleep $((RANDOM%50+30))
                      echo ""
                      continue
                  fi

                  if [ -n "$failed" ]; then
                      echo "Build failed :-("
                      exit 1
                  else
                      break
                  fi
              done
          '

          exit 0
