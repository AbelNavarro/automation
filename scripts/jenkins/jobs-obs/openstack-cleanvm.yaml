- job:
    name: 'openstack-cleanvm'
    project-type: matrix
    axes:
      - axis:
          type: user-defined
          name: image
          values:
            - SLE_11_SP3
            - SLE_12
            - SLE_12_SP1
            - openSUSE-13.2
            - openSUSE-Leap-42.1
      - axis:
          type: user-defined
          name: openstack_project
          values:
            - Icehouse
            - Juno
            - Kilo
            - Liberty
            - Master
      - axis:
          type: slave
          name: slave
          values:
            - cloud-cleanvm
    execution-strategy:
      combination-filter: |
        (
        slave=="cloud-cleanvm"
        && ( openstack_project=="Icehouse" && (image=="openSUSE-13.1" || image=="SLE_11_SP3"))
        || ( openstack_project=="Juno" && (image=="openSUSE-13.2" || image=="SLE_11_SP3"))
        || ( openstack_project=="Kilo" && (image=="openSUSE-13.2" || image=="SLE_12"))
        || ( openstack_project=="Liberty" && (image=="SLE_12_SP1" || image=="SLE_12" || image=="openSUSE-Leap-42.1"))
        || ( openstack_project=="Master" && (image=="openSUSE-Leap-42.1" || image=="SLE_12_SP1"))
        )
      sequential: true
    builders:
      - update-automation
      - shell: |
          #!/bin/bash
          sudo /usr/local/sbin/freshvm cleanvm $image
          sleep 100
          cloudsource=openstack$(echo $openstack_project | tr '[:upper:]' '[:lower:]')
          oshead=1
          set -u
          set +e
          scp ~/github.com/SUSE-Cloud/automation/scripts/jenkins/qa_openstack.sh root@cleanvm:
          ssh root@cleanvm "export cloudsource=$cloudsource; export OSHEAD=$oshead; export NONINTERACTIVE=1; bash -x ~/qa_openstack.sh"
          ret=$?
          if [ "$ret" != 0 ] ; then
            virsh shutdown cleanvm
            # wait for clean shutdown
            n=20 ; while [[ $n > 0 ]] && virsh list |grep cleanvm.*running ; do sleep 2 ; n=$(($n-1)) ; done
            virsh destroy cleanvm
            # cleanup old images
            find /mnt/cleanvmbackup -mtime +5 -type f | xargs --no-run-if-empty rm
            # backup /dev/vg0/cleanvm disk image
            file=/mnt/cleanvmbackup/${BUILD_NUMBER}-${openstack_project}-${image}.raw.gz
            time gzip -c1 /dev/vg0/cleanvm > $file
            du $file
            exit 1
          fi

          exit $ret
      - trigger-builds:
        - project: openstack-submit
          condition: SUCCESS
          current-parameters: true
          predefined-parameters:
            openstack_project=${openstack_project}
